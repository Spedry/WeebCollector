plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.10'
}

group 'sk.spedry.weebcollector'
version '1.0'

javafx {
    version = '11.0.2'
    modules = ['javafx.controls', 'javafx.graphics', 'javafx.fxml']
}

mainClassName='sk.spedry.weebcollector.WCApplication'

/*jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    manifest {
        attributes 'Main-Class': 'sk.spedry.weebcollector.Main'
    }
    from {
        configurations.compileClasspath .collect { it.isDirectory() ? it : zipTree(it) }
    }
}*/

jar {
    manifest {
        attributes(
                'Main-Class': 'sk.spedry.weebcollector.Main'
        )
    }
}

task fatJar(type: Jar) {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    manifest.from jar.manifest
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    } {
        exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"
    }
    with jar
}

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.7.2'
}

sourceCompatibility = '11'
targetCompatibility = '11'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

application {
    mainModule = 'sk.spedry.weebcollector'
    mainClass = 'sk.spedry.weebcollector.Main'
}

dependencies {
    // LOMBOK
    implementation 'org.projectlombok:lombok:1.18.20'
    implementation 'org.projectlombok:lombok:1.18.20'
    // JUNIT
    /*testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")*/
    // LOG4J
    implementation ("org.apache.logging.log4j:log4j-api:2.14.1")
    implementation ("org.apache.logging.log4j:log4j-core:2.14.1")
    // LOMBOK
    compileOnly("org.projectlombok:lombok:1.18.20")
    annotationProcessor("org.projectlombok:lombok:1.18.20")
    // GSON
    implementation 'com.google.code.gson:gson:2.8.8'
}

allprojects {
    repositories {
        maven { url 'https://jitpack.io' }
    }
}

/*test {
    useJUnitPlatform()
}*/

artifacts {
    archives fatJar
}